:BEP: 46
:Title: Decentralized Mutable Torrents
:Version: $Revision$
:Last-Modified: $Date$
:Author:  Luca Matteis <lmatteis@gmail.com>
:Status:  Draft
:Type:    Standards Track
:Content-Type: text/x-rst
:Created: 24-Jul-2016
:Post-History: 


Abstract
========

This extension enables torrents to update based on data stored in the BitTorrent DHT [#BEP-44]_, rather than an HTTP server. The publisher has control over when the torrent is updated, and which content it contains, via mutable DHT items. It is similar to BEP 39 [#BEP-39]_, with the difference being that it uses the DHT to notify and be notified about updates of a torrent, hence should provide more decentralized capabilities to both publishers and consumers.

The intention is to allow publishers to serve content that might change over time in a more decentralized fashion. Consumers interested in publishers content only needs to remember their public key + optiona salt. For instance, entities like Archive.org could publish their database dumps using decentralized mutable torrents, and benefit from not having to maintain a central HTTP feed server to notify consumers about updates.  

Rationale
=========

BEP 39 [#BEP-39]_ allows to automatically update torrents based on HTTP URLs. With DHT storing capabilities [#BEP-44]_, we can implement similar functionality in a more decentralized fashion without resorting to central HTTP servers, and using features already present in the BitTorrent network (mainly DHT store). 


Publishing
=========

Publishers should issue a mutable ``put`` request to the DHT when they want to notify consumers about an update of a torrent. The value ``v`` is the infohash of such torrent. Note that there is a 1-to-1 mapping between a mutable item and a torrent, hence a mutable torrent can only ever map to a single torrent.

Request:

.. parsed-literal::

    {
        "a":
        {
            "cas": *<optional expected seq-nr (int)>*,
            "id": *<20 byte id of sending node (string)>*,
            "k": *<ed25519 public key (32 bytes string)>*,
            "salt": *<optional salt to be appended to "k" when hashing (string)>*
            "seq": *<monotonically increasing sequence number (integer)>*,
            "sig": *<ed25519 signature (64 bytes string)>*,
            "token": *<write-token (string)>*,
            "v": *<20 byte id of the torrent>*
        },
        "t": *<transaction-id (string)>*,
        "y": "q",
        "q": "put"
    }

Response: refer to BEP 44 [#BEP-44]_.

Consuming
========

Consumers issue a ``get`` request using the ID of the mutable torrent they are interested in downloading. Periodically polling such ID by issuing ``get`` requests to see whether the ``v`` of the response has updated; hence the new torrent can be downloaded.

Both publisher and consumer should periodically ``put`` the mutable items they have active to keep them alive in the DHT.

Magnet link
===========


References
==========

.. [#BEP-44] BEP_0044. DHT Store
   (http://www.bittorrent.org/beps/bep_0044.html)

.. [#BEP-39] ChNAGE
   (http://www.bittorrent.org/beps/bep_0039.html)


Copyright
=========

This document has been placed in the public domain.



..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   coding: utf-8
   End:

